services:
  api:
    build: .
    ports:
      - "${API_PORT_PUBLIC:-8000}:8000"
    depends_on:
      - db
      - redis
    volumes:
      - ./models:/app/models:ro
    gpus: all
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-compute, utility}

  worker:
    build: .
    command: uv run celery -A app.workers.celery_app worker -Q generations -l INFO
    depends_on: [ redis, db ]
    volumes:
      - ./models:/app/models:ro
    gpus: all
    environment:
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-compute, utility}

  db:
    image: ${POSTGRES_IMAGE:-postgres:16}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT_PUBLIC:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dstg_user -d smalltextgenerator"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: ${REDIS_IMAGE:-redis:7}
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT_PUBLIC:-6379}:6379"
      
  migrate:
    build: .
    command: uv run alembic upgrade head
    depends_on:
      db:
        condition: service_healthy

volumes:
  pg_data:
